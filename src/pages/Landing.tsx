import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import { Navbar } from '../components/Navbar';
import { Footer } from '../components/Footer';

export const Landing = () => {
  const stats = [
    { value: '98%', label: 'ƒê·ªô ch√≠nh x√°c ph√°t hi·ªán' },
    { value: '<2s', label: 'Th·ªùi gian ph√¢n t√≠ch' },
    { value: '10K+', label: 'M·∫´u l·ª´a ƒë·∫£o ƒë∆∞·ª£c ghi nh·∫≠n' },
    { value: '24/7', label: 'Ho·∫°t ƒë·ªông li√™n t·ª•c' },
  ];

  const features = [
    {
      icon: (
        <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" />
        </svg>
      ),
      title: 'Chuy·ªÉn ƒë·ªïi gi·ªçng n√≥i th√¥ng minh',
      description: 'C√¥ng ngh·ªá AI nh·∫≠n di·ªán gi·ªçng n√≥i ti√™n ti·∫øn, chuy·ªÉn ƒë·ªïi cu·ªôc g·ªçi th√†nh vƒÉn b·∫£n v·ªõi ƒë·ªô ch√≠nh x√°c cao, h·ªó tr·ª£ ƒëa ng√¥n ng·ªØ v√† ph∆∞∆°ng ng·ªØ Vi·ªát Nam',
    },
    {
      icon: (
        <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
        </svg>
      ),
      title: 'Ph√°t hi·ªán m·∫´u l·ª´a ƒë·∫£o',
      description: 'H·ªá th·ªëng ph√¢n t√≠ch s√¢u, nh·∫≠n di·ªán c√°c chi√™u tr√≤ l·ª´a ƒë·∫£o ph·ªï bi·∫øn: gi·∫£ m·∫°o ng√¢n h√†ng, cu·ªôc g·ªçi th√¥ng b√°o tr√∫ng th∆∞·ªüng, y√™u c·∫ßu cung c·∫•p th√¥ng tin nh·∫°y c·∫£m',
    },
    {
      icon: (
        <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
        </svg>
      ),
      title: 'ƒê√°nh gi√° r·ªßi ro t·ª©c th√¨',
      description: 'Thu·∫≠t to√°n ML t√≠nh to√°n ƒëi·ªÉm r·ªßi ro t·ª´ 0-100%, c·∫£nh b√°o chi ti·∫øt c√°c d·∫•u hi·ªáu ƒë√°ng ng·ªù, gi√∫p b·∫°n ƒë∆∞a ra quy·∫øt ƒë·ªãnh an to√†n v√† b·∫£o v·ªá t√†i s·∫£n',
    },
  ];

  const howItWorks = [
    {
      step: '01',
      title: 'T·∫£i l√™n file audio/video',
      description: 'Upload b·∫£n ghi √¢m cu·ªôc g·ªçi ho·∫∑c video ch·ª©a gi·ªçng n√≥i c·∫ßn ki·ªÉm tra',
    },
    {
      step: '02',
      title: 'AI ph√¢n t√≠ch t·ª± ƒë·ªông',
      description: 'H·ªá th·ªëng chuy·ªÉn ƒë·ªïi gi·ªçng n√≥i th√†nh vƒÉn b·∫£n v√† qu√©t t√¨m c√°c d·∫•u hi·ªáu l·ª´a ƒë·∫£o',
    },
    {
      step: '03',
      title: 'Nh·∫≠n b√°o c√°o chi ti·∫øt',
      description: 'Xem transcript, ƒëi·ªÉm r·ªßi ro v√† danh s√°ch c·∫£nh b√°o v·ªõi gi·∫£i th√≠ch c·ª• th·ªÉ',
    },
  ];

  const handleScrollTo = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    element?.scrollIntoView({ behavior: 'smooth', block: 'start' });
  };

  return (
    <div className="min-h-screen flex flex-col bg-white">
      <Navbar />
      <main className="flex-1">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white overflow-hidden">
          <div className="absolute inset-0 opacity-10">
            <div className="absolute top-0 left-0 w-96 h-96 bg-blue-500 rounded-full filter blur-3xl"></div>
            <div className="absolute bottom-0 right-0 w-96 h-96 bg-purple-500 rounded-full filter blur-3xl"></div>
          </div>
          
          <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-20 md:py-24 lg:py-32">
            <div className="text-center">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="mb-6"
              >
                <span className="inline-block px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full text-sm font-medium border border-white/20">
                  üõ°Ô∏è B·∫£o v·ªá b·∫°n kh·ªèi l·ª´a ƒë·∫£o qua gi·ªçng n√≥i
                </span>
              </motion.div>
              
              <motion.h1
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.1 }}
                className="text-3xl sm:text-4xl md:text-6xl lg:text-7xl font-bold mb-4 md:mb-6 leading-tight px-2"
              >
                ChongLuaDao.AI
              </motion.h1>
              
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                className="text-lg sm:text-xl md:text-2xl lg:text-3xl text-gray-300 mb-2 md:mb-4 font-light px-4"
              >
                Ph√°t hi·ªán cu·ªôc g·ªçi l·ª´a ƒë·∫£o v·ªõi
              </motion.p>
              
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.3 }}
                className="text-lg sm:text-xl md:text-2xl lg:text-3xl text-white mb-8 md:mb-12 font-semibold px-4"
              >
                C√¥ng ngh·ªá Tr√≠ tu·ªá Nh√¢n t·∫°o
              </motion.p>
              
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.4 }}
                className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center items-center px-4"
              >
                <Link
                  to="/login"
                  className="w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-white text-gray-900 font-semibold rounded-lg hover:bg-gray-100 transition-all transform hover:scale-105 shadow-xl text-base sm:text-lg text-center"
                >
                  B·∫Øt ƒë·∫ßu ki·ªÉm tra ngay
                </Link>
                <button 
                  onClick={() => handleScrollTo('about')}
                  className="w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-transparent border-2 border-white text-white font-semibold rounded-lg hover:bg-white/10 transition-all text-base sm:text-lg"
                >
                  T√¨m hi·ªÉu th√™m
                </button>
              </motion.div>
            </div>
          </div>
        </section>

        {/* About Section */}
        <section id="about" className="py-20 px-4 sm:px-6 lg:px-8 bg-white scroll-mt-20">
          <div className="max-w-4xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="text-center"
            >
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
                V·ªÅ ChongLuaDao.AI
              </h2>
              <p className="text-lg md:text-xl text-gray-600 leading-relaxed mb-6">
                ChongLuaDao.AI l√† n·ªÅn t·∫£ng c√¥ng ngh·ªá ti√™n ti·∫øn s·ª≠ d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o ƒë·ªÉ b·∫£o v·ªá ng∆∞·ªùi d√πng kh·ªèi c√°c cu·ªôc g·ªçi l·ª´a ƒë·∫£o. Ch√∫ng t√¥i hi·ªÉu r·∫±ng l·ª´a ƒë·∫£o qua ƒëi·ªán tho·∫°i ƒëang tr·ªü th√†nh m·ªëi ƒëe d·ªça l·ªõn t·∫°i Vi·ªát Nam, v·ªõi h√†ng ngh√¨n ng∆∞·ªùi b·ªã m·∫•t ti·ªÅn m·ªói nƒÉm.
              </p>
              <p className="text-base md:text-lg text-gray-600 leading-relaxed">
                V·ªõi c√¥ng ngh·ªá nh·∫≠n di·ªán gi·ªçng n√≥i AI v√† machine learning, ch√∫ng t√¥i ph√¢n t√≠ch n·ªôi dung cu·ªôc g·ªçi, ph√°t hi·ªán c√°c m·∫´u l·ª´a ƒë·∫£o ph·ªï bi·∫øn v√† ƒë√°nh gi√° m·ª©c ƒë·ªô r·ªßi ro ƒë·ªÉ gi√∫p b·∫°n ƒë∆∞a ra quy·∫øt ƒë·ªãnh an to√†n. M·ª•c ti√™u c·ªßa ch√∫ng t√¥i l√† t·∫°o ra m·ªôt l√° ch·∫Øn b·∫£o v·ªá cho m·ªçi ng∆∞·ªùi d√πng Vi·ªát Nam.
              </p>
            </motion.div>
          </div>
        </section>

        {/* Stats Section */}
        <section className="py-16 bg-white border-b border-gray-100">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-8">
              {stats.map((stat, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="text-center"
                >
                  <div className="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 mb-1 md:mb-2">
                    {stat.value}
                  </div>
                  <div className="text-xs md:text-sm lg:text-base text-gray-600 px-1">
                    {stat.label}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Problem Section */}
        <section id="risks" className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-50 scroll-mt-20">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0 }}
              whileInView={{ opacity: 1 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="text-center mb-16"
            >
              <h2 className="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 mb-4 md:mb-6">
                B·∫°n c√≥ ƒëang g·∫∑p r·ªßi ro?
              </h2>
              <p className="text-base md:text-lg text-gray-600 max-w-3xl mx-auto px-4">
                L·ª´a ƒë·∫£o qua cu·ªôc g·ªçi ƒëang tr·ªü th√†nh m·ªëi ƒëe d·ªça l·ªõn t·∫°i Vi·ªát Nam. M·ªói nƒÉm, h√†ng ngh√¨n ng∆∞·ªùi b·ªã m·∫•t ti·ªÅn v√¨ tin v√†o c√°c cu·ªôc g·ªçi gi·∫£ m·∫°o ng√¢n h√†ng, th√¥ng b√°o tr√∫ng th∆∞·ªüng, hay c√°c chi√™u tr√≤ kh√°c.
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 md:gap-6 max-w-5xl mx-auto">
              {[
                'Cu·ªôc g·ªçi gi·∫£ m·∫°o t·ª´ "ng√¢n h√†ng" y√™u c·∫ßu x√°c th·ª±c th√¥ng tin',
                'Th√¥ng b√°o tr√∫ng th∆∞·ªüng y√™u c·∫ßu chuy·ªÉn kho·∫£n ph√≠',
                'Y√™u c·∫ßu cung c·∫•p m√£ OTP ho·∫∑c m·∫≠t kh·∫©u t√†i kho·∫£n'
              ].map((risk, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="flex items-start space-x-3 p-3 md:p-4 bg-red-50 border border-red-100 rounded-lg"
                >
                  <svg className="w-5 h-5 md:w-6 md:h-6 text-red-600 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                  </svg>
                  <p className="text-xs md:text-sm text-gray-700">{risk}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Features Section */}
        <section id="features" className="py-20 px-4 sm:px-6 lg:px-8 bg-white scroll-mt-20">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0 }}
              whileInView={{ opacity: 1 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="text-center mb-16"
            >
              <h2 className="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 mb-3 md:mb-4">
                C√¥ng ngh·ªá b·∫£o v·ªá b·∫°n
              </h2>
              <p className="text-base md:text-lg text-gray-600 max-w-2xl mx-auto px-4">
                S·ª≠ d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o v√† machine learning ƒë·ªÉ ph√¢n t√≠ch v√† ph√°t hi·ªán c√°c m·∫´u l·ª´a ƒë·∫£o m·ªôt c√°ch t·ª± ƒë·ªông
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8">
              {features.map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  className="bg-white border border-gray-200 rounded-xl p-6 md:p-8 hover:shadow-xl transition-all hover:-translate-y-1"
                >
                  <div className="w-12 h-12 md:w-16 md:h-16 bg-gray-900 rounded-lg flex items-center justify-center text-white mb-4 md:mb-6">
                    <div className="w-6 h-6 md:w-8 md:h-8">
                      {feature.icon}
                    </div>
                  </div>
                  <h3 className="text-lg md:text-xl font-semibold text-gray-900 mb-2 md:mb-3">
                    {feature.title}
                  </h3>
                  <p className="text-sm md:text-base text-gray-600 leading-relaxed">
                    {feature.description}
                  </p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* How It Works Section */}
        <section id="how-it-works" className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-50 scroll-mt-20">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0 }}
              whileInView={{ opacity: 1 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="text-center mb-16"
            >
              <h2 className="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-900 mb-3 md:mb-4">
                C√°ch th·ª©c ho·∫°t ƒë·ªông
              </h2>
              <p className="text-base md:text-lg text-gray-600 max-w-2xl mx-auto px-4">
                Ch·ªâ c·∫ßn 3 b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ b·∫£o v·ªá b·∫°n kh·ªèi l·ª´a ƒë·∫£o
              </p>
            </motion.div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 max-w-5xl mx-auto">
              {howItWorks.map((step, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.2 }}
                  className="relative"
                >
                  <div className="bg-white rounded-xl p-6 md:p-8 border border-gray-200 hover:shadow-lg transition-shadow">
                    <div className="text-4xl md:text-5xl font-bold text-gray-200 mb-3 md:mb-4">
                      {step.step}
                    </div>
                    <h3 className="text-lg md:text-xl font-semibold text-gray-900 mb-2 md:mb-3">
                      {step.title}
                    </h3>
                    <p className="text-sm md:text-base text-gray-600">
                      {step.description}
                    </p>
                  </div>
                  {index < howItWorks.length - 1 && (
                    <div className="hidden md:block absolute top-1/2 -right-4 w-8 h-0.5 bg-gray-300 transform -translate-y-1/2">
                      <div className="absolute right-0 top-1/2 transform -translate-y-1/2 w-0 h-0 border-l-8 border-l-gray-300 border-t-4 border-t-transparent border-b-4 border-b-transparent"></div>
                    </div>
                  )}
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-gray-900 to-gray-800 text-white">
          <div className="max-w-4xl mx-auto text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
            >
              <h2 className="text-2xl md:text-3xl lg:text-4xl font-bold mb-4 md:mb-6">
                B·∫£o v·ªá b·∫£n th√¢n ngay h√¥m nay
              </h2>
              <p className="text-base md:text-xl text-gray-300 mb-6 md:mb-8 px-4">
                Kh√¥ng c·∫ßn ƒëƒÉng k√Ω ph·ª©c t·∫°p. Ch·ªâ c·∫ßn email ƒë·ªÉ b·∫Øt ƒë·∫ßu ki·ªÉm tra ngay
              </p>
              <Link
                to="/login"
                className="inline-block px-6 sm:px-8 py-3 sm:py-4 bg-white text-gray-900 font-semibold rounded-lg hover:bg-gray-100 transition-all transform hover:scale-105 shadow-xl text-base sm:text-lg"
              >
                Ki·ªÉm tra mi·ªÖn ph√≠ ngay
              </Link>
            </motion.div>
          </div>
        </section>
      </main>
      <Footer />
    </div>
  );
};

